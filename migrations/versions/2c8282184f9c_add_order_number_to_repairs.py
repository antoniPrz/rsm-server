"""Add order_number to repairs

Revision ID: 2c8282184f9c
Revises: 
Create Date: 2024-09-28 06:17:11.112546

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2c8282184f9c'
down_revision = None
branch_labels = None
depends_on = None


# def upgrade():
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.drop_table('repair_logs')
# #     op.drop_table('users')
#     with op.batch_alter_table('repairs', schema=None) as batch_op:
#         batch_op.add_column(sa.Column('order_number', sa.String(length=20), nullable=False))
#         batch_op.alter_column('device_model',
#                existing_type=sa.VARCHAR(length=100),
#                nullable=True)
#         batch_op.alter_column('serial_number',
#                existing_type=sa.VARCHAR(length=50),
#                nullable=True)
#         batch_op.alter_column('reported_issue',
#                existing_type=sa.TEXT(),
#                nullable=True)
#         batch_op.create_unique_constraint(None, ['order_number'])
#         batch_op.drop_constraint('repairs_user_id_fkey', type_='foreignkey')

#     # ### end Alembic commands ###


# def downgrade():
#     # ### commands auto generated by Alembic - please adjust! ###
#     with op.batch_alter_table('repairs', schema=None) as batch_op:
#         batch_op.create_foreign_key('repairs_user_id_fkey', 'users', ['user_id'], ['id'])
#         batch_op.drop_constraint(None, type_='unique')
#         batch_op.alter_column('reported_issue',
#                existing_type=sa.TEXT(),
#                nullable=False)
#         batch_op.alter_column('serial_number',
#                existing_type=sa.VARCHAR(length=50),
#                nullable=False)
#         batch_op.alter_column('device_model',
#                existing_type=sa.VARCHAR(length=100),
#                nullable=False)
#         batch_op.drop_column('order_number')
def upgrade():
    # Agregar la columna `order_number` como nullable inicialmente
    with op.batch_alter_table('repairs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('order_number', sa.String(length=20), nullable=True))
        batch_op.alter_column('device_model',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.alter_column('serial_number',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('reported_issue',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.create_unique_constraint(None, ['order_number'])
        batch_op.drop_constraint('repairs_user_id_fkey', type_='foreignkey')

def downgrade():
    # Eliminar la columna en el downgrade
    with op.batch_alter_table('repairs', schema=None) as batch_op:
        batch_op.drop_column('order_number')


#     op.create_table('users',
#     sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
#     sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
#     sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
#     sa.Column('role', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
#     sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
#     sa.PrimaryKeyConstraint('id', name='users_pkey'),
#     sa.UniqueConstraint('username', name='users_username_key'),
#     postgresql_ignore_search_path=False
#     )
    op.create_table('repair_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('repair_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('log_entry', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['repair_id'], ['repairs.id'], name='repair_logs_repair_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='repair_logs_pkey')
    )
    # ### end Alembic commands ###
